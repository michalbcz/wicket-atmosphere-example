<?xml version="1.0" encoding="ISO-8859-1"?>
<web-app xmlns="http://java.sun.com/xml/ns/javaee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	version="2.5">

	<display-name>atmosphere-issue-1164</display-name>

	<!--
		There are three means to configure Wickets configuration mode and they 
		are tested in the order given.
		
		1) A system property: -Dwicket.configuration 
		2) servlet specific <init-param> 
		3) context specific <context-param>

		The value might be either "development" (reloading when templates change) or 
		"deployment". If no configuration is found, "development" is the default. -->

	<!--<filter>-->
		<!--<filter-name>wicket.atmosphere-issue-1164</filter-name>-->
		<!--<filter-class>org.apache.wicket.protocol.http.WicketFilter</filter-class>-->
		<!--<init-param>-->
			<!--<param-name>applicationClassName</param-name>-->
			<!--<param-value>cz.bernhard.wicket.WicketApplication</param-value>-->
		<!--</init-param>-->
	<!--</filter>-->

	<!--<filter-mapping>-->
		<!--<filter-name>wicket.atmosphere-issue-1164</filter-name>-->
		<!--<url-pattern>/*</url-pattern>-->
	<!--</filter-mapping>-->

    <servlet>
        <description>AtmosphereFilter</description>
        <servlet-name>AtmosphereFilter</servlet-name>
        <servlet-class>org.atmosphere.cpr.AtmosphereServlet</servlet-class>

        <!--<init-param>-->
            <!--<param-name>applicationFactoryClassName</param-name>-->
            <!--<param-value>org.apache.wicket.spring.SpringWebApplicationFactory</param-value>-->
        <!--</init-param>-->

        <init-param>
            <param-name>applicationClassName</param-name>
            <param-value>cz.bernhard.wicket.WicketApplication</param-value>
        </init-param>

        <init-param>
            <param-name>org.atmosphere.useWebSocket</param-name>
            <param-value>true</param-value>
        </init-param>

        <init-param>
            <param-name>org.atmosphere.useNative</param-name>
            <param-value>true</param-value>
        </init-param>

        <init-param>
            <param-name>org.atmosphere.cpr.sessionSupport</param-name>
            <param-value>true</param-value>
        </init-param>

        <init-param>
            <param-name>filterMappingUrlPattern</param-name>
            <param-value>/*</param-value>
        </init-param>

        <init-param>
            <param-name>org.atmosphere.websocket.WebSocketProtocol</param-name>
            <param-value>org.atmosphere.websocket.protocol.EchoProtocol</param-value>
        </init-param>

        <init-param>
            <param-name>org.atmosphere.cpr.broadcastFilterClasses</param-name>
            <param-value>org.apache.wicket.atmosphere.TrackMessageSizeFilter</param-value>
        </init-param>

        <init-param>
            <param-name>org.atmosphere.cpr.AtmosphereInterceptor</param-name>
            <param-value>cz.bernhard.wicket.SetEncodingAndContentTypeAtmosphereInterceptor</param-value>
        </init-param>

        <load-on-startup>0</load-on-startup>

    </servlet>

    <servlet-mapping>
        <servlet-name>AtmosphereFilter</servlet-name>
        <url-pattern>/*</url-pattern>
    </servlet-mapping>


</web-app>
